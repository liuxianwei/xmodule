package com.penglecode.xmodule.newscloud.usercenter.model;

import com.penglecode.xmodule.common.codegen.Id;
import com.penglecode.xmodule.common.codegen.Model;
import com.penglecode.xmodule.common.support.BaseModel;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * 用户关注 (nc_user_follower) 实体类
 * 
 * @author Mybatis-Generator
 * @date	2019年06月27日 上午 11:18:56
 */
@Model(name="用户关注")
public class UserFollower implements BaseModel<UserFollower> {
     
    private static final long serialVersionUID = 1L;

    /** ID */
    @Id
    private Long id;

    /** 被关注用户ID */
    private Long userId;

    /** 粉丝ID */
    private Long followerUserId;

    /** 关注时间 */
    private String followTime;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Long getFollowerUserId() {
        return followerUserId;
    }

    public void setFollowerUserId(Long followerUserId) {
        this.followerUserId = followerUserId;
    }

    public String getFollowTime() {
        return followTime;
    }

    public void setFollowTime(String followTime) {
        this.followTime = followTime;
    }

    public MapBuilder mapBuilder() {
        return new MapBuilder();
    }

    /**
     * Auto generated by Mybatis Generator
     */
    public class MapBuilder {
         
        private final Map<String, Object> modelProperties = new LinkedHashMap<String,Object>();

        MapBuilder() {
            
        }

        public MapBuilder withId(Long ... id) {
            modelProperties.put("id", BaseModel.first(id, getId()));
            return this;
        }

        public MapBuilder withUserId(Long ... userId) {
            modelProperties.put("userId", BaseModel.first(userId, getUserId()));
            return this;
        }

        public MapBuilder withFollowerUserId(Long ... followerUserId) {
            modelProperties.put("followerUserId", BaseModel.first(followerUserId, getFollowerUserId()));
            return this;
        }

        public MapBuilder withFollowTime(String ... followTime) {
            modelProperties.put("followTime", BaseModel.first(followTime, getFollowTime()));
            return this;
        }

        public Map<String, Object> build() {
            return modelProperties;
        }
    }
}